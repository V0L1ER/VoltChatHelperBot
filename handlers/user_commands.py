from aiogram import Router, Bot
from aiogram.types import Message
from aiogram.filters import Command
from utils.logger import BotLogger
from config import get_settings
import time
import psutil
import platform
from datetime import datetime
from sqlalchemy import select, func
from database.models import UserStats
from database.database import AsyncSessionLocal
import html
from utils.command_logging import log_command
router = Router()
logger = BotLogger.get_logger()
settings = get_settings()

from functools import wraps

def allowed_chat_only():
    def decorator(func):
        @wraps(func)
        async def wrapper(message: Message, *args, **kwargs):
            if message.chat.id != settings.CHAT_ID:
                logger.warning(
                    f"–ü–æ–ø—ã—Ç–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã –≤ –Ω–µ—Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–æ–º —á–∞—Ç–µ: {message.chat.id}"
                )
                return
            return await func(message, *args, **kwargs)
        return wrapper
    return decorator

@router.message(Command("report"))
@allowed_chat_only()
async def report_user(message: Message, bot: Bot):
    await log_command(message)
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /report –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∂–∞–ª–æ–±—ã –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    try:
        logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /report –≤—ã–∑–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {message.from_user.id}")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if not message.reply_to_message:
            logger.warning(f"–ö–æ–º–∞–Ω–¥–∞ /report –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –±–µ–∑ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {message.from_user.id}")
            await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ –∫–∞–∫–æ–µ-–ª–∏–±–æ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
            return

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–∞–º–æ—Ä–µ–ø–ø–æ—Ä—Ç
        if message.reply_to_message.from_user.id == message.from_user.id:
            logger.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –ø—ã—Ç–∞–µ—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–ø–æ—Ä—Ç –Ω–∞ —Å–µ–±—è")
            await message.reply("–ù–µ–ª—å–∑—è —Ä–µ–ø–æ—Ä—Ç–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è ü§™")
            return

        reported_user = message.reply_to_message.from_user
        reporter = message.from_user

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∞ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞ –∏ –Ω–∞ –∞–¥–º–∏–Ω–∞ —á–∞—Ç–∞
        try:
            chat_member = await bot.get_chat_member(message.chat.id, reported_user.id)
            is_admin = (
                reported_user.id in settings.admin_ids_list or 
                chat_member.status in ['administrator', 'creator']
            )
            
            if is_admin:
                logger.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {reporter.id} –ø—ã—Ç–∞–µ—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–ø–æ—Ä—Ç –Ω–∞ –∞–¥–º–∏–Ω–∞ {reported_user.id}")
                await message.reply("–ê–¥–º–∏–Ω–æ–≤ —Ä–µ–ø–æ—Ä—Ç–∏—à—å? –ê–π-–∞–π-–∞–π üòà")
                return
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {e}", exc_info=True)
            # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω–∞

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª
        if reported_user.id == settings.CHANNEL_ID:
            logger.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {reporter.id} –ø—ã—Ç–∞–µ—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–ø–æ—Ä—Ç –Ω–∞ –∫–∞–Ω–∞–ª")
            await message.delete()
            return

        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Ä–µ–ø–æ—Ä—Ç–∞
        reporter_name = reporter.username or reporter.first_name
        reported_name = reported_user.username or reported_user.first_name
        
        report_text = (
            f"üì£ *–ù–æ–≤—ã–π —Ä–µ–ø–æ—Ä—Ç*\n\n"
            f"üî∏ *–û—Ç:* {reporter_name} (ID: {reporter.id})\n"
            f"üî∏ *–ù–∞:* {reported_name} (ID: {reported_user.id})"
        )

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–ø–æ—Ä—Ç–∞
        try:
            await bot.send_message(
                chat_id=settings.SHARECHAT_ID,
                text=report_text,
                parse_mode="Markdown"
            )
            logger.info(f"–†–µ–ø–æ—Ä—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ—Ç {reporter.id} –Ω–∞ {reported_user.id}")
            await message.reply(f"–†–µ–ø–æ—Ä—Ç –Ω–∞ {reported_name} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
            
        except Exception as e:
            error_msg = f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–ø–æ—Ä—Ç: {str(e)}"
            logger.error(error_msg, exc_info=True)
            await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–µ–ø–æ—Ä—Ç–∞.")
            
    except Exception as e:
        logger.error(f"–û–±—â–∞—è –æ—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ report: {str(e)}", exc_info=True)
        await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã.") 
             
@router.message(Command("about"))
@allowed_chat_only()
async def about_bot(message: Message):
    await log_command(message)
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ, –≤–∫–ª—é—á–∞—è –≤–µ—Ä—Å–∏—é, –∞–≤—Ç–æ—Ä–∞ –∏ —Å—Å—ã–ª–∫—É –Ω–∞ –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥.
    """
    try:
        logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /about –≤—ã–∑–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {message.from_user.id}")
        
        # –ü—ã—Ç–∞–µ–º—Å—è –ø—Ä–æ—á–∏—Ç–∞—Ç—å –∫–∞—Å—Ç–æ–º–Ω—ã–π —Ç–µ–∫—Å—Ç
        try:
            with open('data/about_text.txt', 'r', encoding='utf-8') as f:
                about_text = f.read()
        except FileNotFoundError:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—Å—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω
            bot_version = "1.0.0"
            about_text = (
                f"ü§ñ <b>VoltChatHelper Bot v{bot_version}</b>\n\n"
                "üìù <b>–û –±–æ—Ç–µ:</b>\n"
                "–Ø —É–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —á–∞—Ç–∞ –∫–∞–Ω–∞–ª–∞ <b>–í–æ–ª—å—Ç–∞</b>. "
                "–ü–æ–º–æ–≥–∞—é –º–æ–¥–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —á–∞—Ç –∏ –¥–µ–ª–∞—é –æ–±—â–µ–Ω–∏–µ —É–¥–æ–±–Ω–µ–µ.\n\n"
                "üõ† <b>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>\n"
                "‚Ä¢ –ú–æ–¥–µ—Ä–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π\n"
                "‚Ä¢ –°–∏—Å—Ç–µ–º–∞ —Ä–µ–ø–æ—Ä—Ç–æ–≤\n"
                "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è\n"
                "‚Ä¢ –ò –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ!\n\n"
                "üë®‚Äçüíª <b>–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:</b> @V0L1ER\n"
                "üîó <b>–ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥:</b> <a href='https://github.com/V0L1ER/VoltChatHelperBot'>GitHub</a>\n\n"
                "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥"
            )
        
        await message.answer(
            about_text,
            parse_mode='HTML',
            disable_web_page_preview=True
        )
        
        logger.info(f"–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.from_user.id}")
        
    except Exception as e:
        error_msg = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ"
        logger.error(f"{error_msg}: {str(e)}", exc_info=True)
        await message.reply(error_msg)

@router.message(Command("avatar"))
@allowed_chat_only()
async def send_avatar(message: Message):
    await log_command(message)
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∞–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ú–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞–∫ —Å–≤–æ–π –∞–≤–∞—Ç–∞—Ä,
    —Ç–∞–∫ –∏ –∞–≤–∞—Ç–∞—Ä –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –æ—Ç–≤–µ—Ç–µ –Ω–∞ –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    """
    try:
        logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /avatar –≤—ã–∑–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {message.from_user.id}")
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–µ–ª–µ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∞–≤—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ —Ç–æ—Ç, –∫–æ–º—É –æ—Ç–≤–µ—Ç–∏–ª–∏)
        target_user = message.reply_to_message.from_user if message.reply_to_message else message.from_user
        user_name = target_user.username or target_user.first_name
        
        try:
            user_photos = await target_user.get_profile_photos()
            
            if not user_photos or user_photos.total_count == 0:
                logger.info(f"–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target_user.id} –Ω–µ—Ç –∞–≤–∞—Ç–∞—Ä–∞")
                await message.reply(
                    f"{'–£ –≤–∞—Å' if target_user.id == message.from_user.id else f'–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_name}'} "
                    "–Ω–µ—Ç –∞–≤–∞—Ç–∞—Ä–∞! ü§∑‚Äç‚ôÇÔ∏è"
                )
                return
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
            photo = user_photos.photos[0][-1]  # –ë–µ—Ä—ë–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Ñ–æ—Ç–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
            caption = (
                f"üñº –ê–≤–∞—Ç–∞—Ä {'–≤–∞—à–µ–≥–æ' if target_user.id == message.from_user.id else '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'} "
                f"–ø—Ä–æ—Ñ–∏–ª—è\n"
                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_name}\n"
                f"üìä –í—Å–µ–≥–æ –∞–≤–∞—Ç–∞—Ä–æ–≤: {user_photos.total_count}"
            )
            
            await message.reply_photo(
                photo.file_id,
                caption=caption
            )
            logger.info(f"–ê–≤–∞—Ç–∞—Ä —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target_user.id}")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è: {str(e)}", exc_info=True)
            await message.reply("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞–≤–∞—Ç–∞—Ä üò¢")
            
    except Exception as e:
        logger.error(f"–û–±—â–∞—è –æ—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ avatar: {str(e)}", exc_info=True)
        await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã üòî")

@router.message(Command("rules"))
@allowed_chat_only()
async def rules_command(message: Message):
    await log_command(message)
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞ —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∏ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫.
    """
    try:
        logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /rules –≤—ã–∑–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {message.from_user.id}")
        
        rules_text = (
            "üìú *–ü–†–ê–í–ò–õ–ê –ß–ê–¢–ê –ê–ô–¢–ò–®–ù–ò–ö–û–í*\n\n"
            "üö´ *1. –ó–∞–ø—Ä–µ—â–µ–Ω–æ –±—ã—Ç—å —Ç—É–ø—ã–º*\n\n"
            "üö´ *2. –ó–∞–ø—Ä–µ—â–µ–Ω—ã —Å–ø–∞–º –∏ —Ñ–ª—É–¥*\n"
            "‚Ä¢ –†–∞–∑–±–∏—Ç–∏–µ –º—ã—Å–ª–µ–π –Ω–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –º–µ–ª–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π\n"
            "‚Ä¢ –û—Ñ—Ñ—Ç–æ–ø —Å—Ç–∏–∫–µ—Ä–∞–º–∏, –≤–∏–¥–µ–æ, –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏, —Ç–µ–∫—Å—Ç–∞–º–∏\n\n"
            "üö´ *3. –ó–∞–ø—Ä–µ—â–µ–Ω–∞ –ø–æ–ª–∏—Ç–∏–∫–∞*\n"
            "_‚ùóÔ∏è –í–∫–ª—é—á–∞—è –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –æ—Ç—Å—ã–ª–∫–∏, —Å–∏–º–≤–æ–ª–∏–∫—É –∏ '–ø–∞—Å—Ö–∞–ª–∫–∏'_\n\n"
            "üö´ *4. –ó–∞–ø—Ä–µ—â–µ–Ω—ã —Å—Ä–∞—á–∏ –∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã*\n"
            "‚Ä¢ –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–µ –¥–∏—Å–∫—É—Å—Å–∏–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã\n"
            "_‚ùóÔ∏è –†–µ—à–∞–π—Ç–µ —Ä–∞–∑–Ω–æ–≥–ª–∞—Å–∏—è –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö_\n\n"
            "üîû *5. –ó–∞–ø—Ä–µ—â—ë–Ω NSFW-–∫–æ–Ω—Ç–µ–Ω—Ç*\n"
            "‚Ä¢ –ö–æ–Ω—Ç–µ–Ω—Ç 18+, –ø–æ—Ä–Ω–æ–≥—Ä–∞—Ñ–∏—è, —ç—Ä–æ—Ç–∏–∫–∞\n"
            "‚Ä¢ –ñ–µ—Å—Ç–æ–∫–æ—Å—Ç—å, —à–æ–∫-–∫–æ–Ω—Ç–µ–Ω—Ç, —Ä–∞—Å—á–ª–µ–Ω—ë–Ω–∫–∞\n"
            "‚Ä¢ –û–±—Å—É–∂–¥–µ–Ω–∏–µ –Ω–∞—Ä–∫–æ—Ç–∏–∫–æ–≤, —Ç–µ—Ä—Ä–æ—Ä–∏–∑–º–∞, –∫–∞—Ç–∞—Å—Ç—Ä–æ—Ñ\n\n"
            "üîí *6. –ó–∞–ø—Ä–µ—â–µ–Ω —Å–ª–∏–≤ –ª–∏—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏*\n"
            "‚Ä¢ –ù–æ–º–µ—Ä–∞, –∞–¥—Ä–µ—Å–∞, –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç, –ø–µ—Ä–µ–ø–∏—Å–∫–∏\n"
            "‚Ä¢ –î–µ–∞–Ω–æ–Ω/–¥–æ–∫—Å–∏–Ω–≥ –≤ –ª—é–±–æ–º –≤–∏–¥–µ\n"
            "_‚ùóÔ∏è –ó–∞–ø—Ä–µ—â–µ–Ω —Å–ª–∏–≤ –ø–ª–∞—Ç–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (Boosty, Patreon –∏ –¥—Ä.)_\n\n"
            "üì¢ *7. –ó–∞–ø—Ä–µ—â–µ–Ω–∞ —Ä–µ–∫–ª–∞–º–∞*\n"
            "‚Ä¢ –ü–∏–∞—Ä –≤ –Ω–∏–∫–Ω–µ–π–º–µ –∏–ª–∏ –Ω–∞ –∞–≤–∞—Ç–∞—Ä–∫–µ\n"
            "‚Ä¢ –†–µ–∫–ª–∞–º–∞ —Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤\n"
            "‚Ä¢ –ü–æ–ø—Ä–æ—à–∞–π–Ω–∏—á–µ—Å—Ç–≤–æ –∏ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –ª–∏—á–Ω–æ–π –≤—ã–≥–æ–¥—ã\n\n"
            "üé≠ *8. –ó–∞–ø—Ä–µ—â–µ–Ω–∞ –∏–º–∏—Ç–∞—Ü–∏—è –¥—Ä—É–≥–∏—Ö –ª–∏—Ü*\n"
            "‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —á—É–∂–∏—Ö –∏–º—ë–Ω\n"
            "‚Ä¢ –ò–º–∏—Ç–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏\n\n"
            "‚õîÔ∏è *9. –ó–∞–ø—Ä–µ—â–µ–Ω –æ–±—Ö–æ–¥ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫*\n"
            "‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤\n\n"
            "üìπ *10. –ó–∞–ø—Ä–µ—â–µ–Ω–æ –Ω–∞—Ä—É—à–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –≤–∏–¥–µ–æ—á–∞—Ç–∞*\n\n"
            "‚ö†Ô∏è *–í–ê–ñ–ù–û:*\n"
            "‚Ä¢ –ó–∞ –ª—é–±–æ–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–¥–∞–Ω –ø–µ—Ä–º–∞–Ω–µ–Ω—Ç–Ω—ã–π –±–∞–Ω\n"
            "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /report –¥–ª—è –∂–∞–ª–æ–± –Ω–∞ –Ω–∞—Ä—É—à–∏—Ç–µ–ª–µ–π\n"
            "_‚ùóÔ∏è –ó–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ —Ä–µ–ø–æ—Ä—Ç–∞–º–∏ –∫–∞—Ä–∞–µ—Ç—Å—è –±–∞–Ω–æ–º_\n\n"
            "üëÆ‚Äç‚ôÇÔ∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Å—Ç–∞–≤–ª—è–µ—Ç –∑–∞ —Å–æ–±–æ–π –ø—Ä–∞–≤–æ –Ω–∞ –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –≤ —Å–ø–æ—Ä–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö."
        )
        
        await message.reply(
            rules_text,
            parse_mode='Markdown',
            disable_web_page_preview=True
        )
        
        logger.info(f"–ü—Ä–∞–≤–∏–ª–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.from_user.id}")
        
    except Exception as e:
        error_msg = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø—Ä–∞–≤–∏–ª"
        logger.error(f"{error_msg}: {str(e)}", exc_info=True)
        await message.reply(f"{error_msg}. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

@router.message(Command("admin"))
@allowed_chat_only()
async def calling_all_admin(message: Message, bot: Bot):
    await log_command(message)
    """
    –£–≤–µ–¥–æ–º–ª—è–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –æ –∑–∞–ø—Ä–æ—Å–µ –ø–æ–º–æ—â–∏.
    –ü—Ä–∏ –æ—Ç–≤–µ—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–∑–¥–∞—ë—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ–±–ª–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    """
    try:
        logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /admin –≤—ã–∑–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {message.from_user.id}")
        
        username = message.from_user.username or message.from_user.first_name
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–π–º–∞—É—Ç–∞ –º–µ–∂–¥—É –≤—ã–∑–æ–≤–∞–º–∏ –∞–¥–º–∏–Ω–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 5 –º–∏–Ω—É—Ç)
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —á–µ—Ä–µ–∑ Redis –∏–ª–∏ –¥—Ä—É–≥–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
        
        if message.reply_to_message:
            # –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
            chat_id = message.chat.id
            msg_id = message.reply_to_message.message_id
            chat_id_link = str(chat_id).replace('-100', '')
            
            admin_text = (
                f"‚ö†Ô∏è <b>–¢—Ä–µ–±—É–µ—Ç—Å—è –≤–Ω–∏–º–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏!</b>\n\n"
                f"üë§ –í—ã–∑–≤–∞–ª: {username}\n"
                f"üí¨ –ß–∞—Ç: {message.chat.title}\n"
                f"üîó <a href='https://t.me/c/{chat_id_link}/{msg_id}'>–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é</a>"
            )
            
            user_text = (
                "‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã —É–≤–µ–¥–æ–º–ª–µ–Ω—ã!\n"
                "‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ, —Å–∫–æ—Ä–æ –∫—Ç–æ-–Ω–∏–±—É–¥—å –ø–æ–¥–æ–π–¥–µ—Ç."
            )
        else:
            # –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –±–µ–∑ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
            admin_text = (
                f"‚ö†Ô∏è <b>–í—ã–∑–æ–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏</b>\n\n"
                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username}\n"
                f"üí¨ –ß–∞—Ç: {message.chat.title}\n"
                f"‚è∞ –í—Ä–µ–º—è: {message.date.strftime('%H:%M:%S')}"
            )
            
            user_text = "‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã —É–≤–µ–¥–æ–º–ª–µ–Ω—ã –æ –≤–∞—à–µ–º –∑–∞–ø—Ä–æ—Å–µ!"

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
        try:
            await bot.send_message(
                chat_id=settings.SHARECHAT_ID,
                text=admin_text,
                parse_mode='HTML',
                disable_web_page_preview=True
            )
            
            # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            await message.reply(user_text)
            
            logger.info(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–æ–≤ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞–º: {str(e)}", exc_info=True)
            await message.reply(
                "üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            )
            
    except Exception as e:
        logger.error(f"–û–±—â–∞—è –æ—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ admin: {str(e)}", exc_info=True)
        await message.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã.")

@router.message(Command("help"))
@allowed_chat_only()
async def help_command(message: Message):
    await log_command(message)
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ —Å –∏—Ö –æ–ø–∏—Å–∞–Ω–∏–µ–º.
    """
    try:
        logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /help –≤—ã–∑–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {message.from_user.id}")
        
        help_text = (
            "ü§ñ *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n\n"
            "üë• *–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n"
            "‚Ä¢ <code>/help</code> - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
            "‚Ä¢ <code>/about</code> - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ\n"
            "‚Ä¢ <code>/rules</code> - –ü—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞\n"
            "‚Ä¢ <code>/ping</code> - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞\n\n"
            
            "üë§ *–ö–æ–º–∞–Ω–¥—ã –ø—Ä–æ—Ñ–∏–ª—è:*\n"
            "‚Ä¢ <code>/avatar</code> - –ü–æ–∫–∞–∑–∞—Ç—å –∞–≤–∞—Ç–∞—Ä (—Å–≤–æ–π –∏–ª–∏ –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)\n"
            "‚Ä¢ <code>/profile</code> - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ñ–∏–ª–µ\n"
            "‚Ä¢ <code>/top</code> - –¢–æ–ø –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n\n"
            
            "üõ° *–ú–æ–¥–µ—Ä–∞—Ü–∏—è:*\n"
            "‚Ä¢ <code>/report</code> - –ü–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ (–æ—Ç–≤–µ—Ç–æ–º)\n"
            "‚Ä¢ <code>/admin</code> - –í—ã–∑–≤–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n\n"
            
            "üí° *–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:*\n"
            "‚Ä¢ –î–ª—è –∫–æ–º–∞–Ω–¥ —Å –æ—Ç–≤–µ—Ç–æ–º, –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
            "‚Ä¢ –ü—Ä–∏–º–µ—Ä: –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π /report\n\n"
            
            "‚ö†Ô∏è *–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:*\n"
            "‚Ä¢ –ù–µ –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª—è–π—Ç–µ –∫–æ–º–∞–Ω–¥–∞–º–∏\n"
            "‚Ä¢ –ó–∞ —Å–ø–∞–º –∫–æ–º–∞–Ω–¥–∞–º–∏ –ø–æ—Å–ª–µ–¥—É–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ\n"
            "‚Ä¢ –ü—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º"
        )
        
        await message.reply(
            help_text,
            parse_mode='HTML',
            disable_web_page_preview=True
        )
        
        logger.info(f"–°–ø—Ä–∞–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.from_user.id}")
        
    except Exception as e:
        error_msg = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–ø—Ä–∞–≤–∫–∏"
        logger.error(f"{error_msg}: {str(e)}", exc_info=True)
        await message.reply(f"{error_msg}. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

@router.message(Command("ping"))
@allowed_chat_only()
async def ping_command(message: Message):
    await log_command(message)
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –±–æ—Ç–∞ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–∏—Å—Ç–µ–º–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.
    """
    try:
        logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /ping –≤—ã–∑–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {message.from_user.id}")
        
        # –ó–∞–º–µ—Ä—è–µ–º –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞
        start = time.perf_counter()
        ping_msg = await message.reply("üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è...")
        end = time.perf_counter()
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ
        process = psutil.Process()
        memory_usage = process.memory_info().rss / 1024 / 1024
        cpu_usage = psutil.cpu_percent()
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
        start_time = datetime.fromtimestamp(process.create_time())
        uptime = datetime.now() - start_time
        hours, remainder = divmod(int(uptime.total_seconds()), 3600)
        minutes, seconds = divmod(remainder, 60)
        
        status_text = (
            "üèì –ü–æ–Ω–≥!\n\n"
            f"‚è± –ó–∞–¥–µ—Ä–∂–∫–∞: <code>{(end - start) * 1000:.1f} –º—Å</code>\n"
            f"üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ: <code>–°—Ç–∞–±–∏–ª—å–Ω–æ–µ</code>\n"
            f"‚åõÔ∏è –ê–ø—Ç–∞–π–º: <code>{hours:02d}:{minutes:02d}:{seconds:02d}</code>\n\n"
            "üìä –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n"
            f"üíæ RAM: <code>{memory_usage:.1f} MB</code>\n"
            f"üíª CPU: <code>{cpu_usage}%</code>\n"
            f"üñ• OS: <code>{platform.system()}</code>\n"
            f"üêç Python: <code>{platform.python_version()}</code>"
        )
        
        await ping_msg.edit_text(
            status_text,
            parse_mode="HTML",
            disable_web_page_preview=True
        )
        
        logger.info(
            f"Ping –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ. "
            f"–ó–∞–¥–µ—Ä–∂–∫–∞: {(end - start) * 1000:.1f}–º—Å, "
            f"RAM: {memory_usage:.1f}MB, "
            f"CPU: {cpu_usage}%"
        )
        
    except Exception as e:
        error_msg = "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è"
        logger.error(f"{error_msg}: {str(e)}", exc_info=True)
        
        if 'ping_msg' in locals():
            await ping_msg.edit_text(
                f"‚ùå {error_msg}\n"
                f"‚ö†Ô∏è –ü—Ä–∏—á–∏–Ω–∞: {str(e)}",
                parse_mode="HTML"
            )
        else:
            await message.reply(f"‚ùå {error_msg}")

@router.message(Command("top"))
@allowed_chat_only()
async def show_top_users(message: Message):
    await log_command(message)
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ø —Å–∞–º—ã—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–∞—Ç–∞.
    """
    try:
        logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /top –≤—ã–∑–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {message.from_user.id}")
        
        async with AsyncSessionLocal() as session:
            query = (
                select(UserStats)
                .where(UserStats.chat_id == message.chat.id)
                .order_by(UserStats.message_count.desc())
                .limit(10)
            )
            result = await session.execute(query)
            top_users = result.scalars().all()
            
            if not top_users:
                await message.reply("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–∫–∞ –Ω–µ —Å–æ–±—Ä–∞–Ω–∞.")
                return
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–æ–ø–æ–º
            top_text = ["<b>üìä –¢–æ–ø 10 –∞–∫—Ç–∏–≤–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:</b>\n"]
            
            for i, user_stat in enumerate(top_users, 1):
                try:
                    member = await message.chat.get_member(user_stat.user_id)
                    user = member.user
                    username = user.username if user.username else user.full_name
                    
                    medal = {1: "ü•á", 2: "ü•à", 3: "ü•â"}.get(i, "‚Ä¢")
                    msg_count = format_number(user_stat.message_count)
                    
                    top_text.append(
                        f"{medal} {i}. <a href='tg://user?id={user.id}'>{username}</a>"
                        f"\n‚îî –°–æ–æ–±—â–µ–Ω–∏–π: <code>{msg_count}</code>"
                    )
                    
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ {user_stat.user_id}: {e}")
                    continue
            
            await message.reply(
                "\n".join(top_text),
                parse_mode="HTML",
                disable_web_page_preview=True
            )
            
            logger.info(f"–¢–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —á–∞—Ç {message.chat.id}")
            
    except Exception as e:
        error_msg = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–æ–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
        logger.error(f"{error_msg}: {str(e)}", exc_info=True)
        await message.reply(f"{error_msg}. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

def format_number(num: int) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —á–∏—Å–ª–æ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    if num < 1000:
        return str(num)
    elif num < 1000000:
        return f"{num/1000:.1f}K".rstrip('0').rstrip('.')
    else:
        return f"{num/1000000:.1f}M".rstrip('0').rstrip('.')

@router.message(Command("profile"))
@allowed_chat_only()
async def profile_command(message: Message):
    await log_command(message)
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ñ–∏–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    try:
        logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /profile –≤—ã–∑–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {message.from_user.id}")
        
        target_user = message.reply_to_message.from_user if message.reply_to_message else message.from_user
        
        async with AsyncSessionLocal() as session:
            query = select(UserStats).where(
                UserStats.user_id == target_user.id,
                UserStats.chat_id == message.chat.id
            )
            result = await session.execute(query)
            user_stats = result.scalar_one_or_none()
            
            chat_member = await message.chat.get_member(target_user.id)
            
            status_emoji = {
                'creator': 'üëë –í–ª–∞–¥–µ–ª–µ—Ü',
                'administrator': '‚≠êÔ∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
                'member': 'üë§ –£—á–∞—Å—Ç–Ω–∏–∫',
                'restricted': '‚ö†Ô∏è –û–≥—Ä–∞–Ω–∏—á–µ–Ω',
                'left': 'üö∂‚Äç‚ôÇÔ∏è –ü–æ–∫–∏–Ω—É–ª —á–∞—Ç',
                'banned': 'üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω'
            }.get(chat_member.status, '‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
            
            profile_text = [
                "<b>üë§ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</b>",
                f"‚Ä¢ –ò–º—è: {html.escape(target_user.full_name)}",
                f"‚Ä¢ ID: <code>{target_user.id}</code>",
                f"‚Ä¢ –°—Ç–∞—Ç—É—Å: {status_emoji}",
                f"‚Ä¢ –Æ–∑–µ—Ä–Ω–µ–π–º: {f'@{target_user.username}' if target_user.username else '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}"
            ]
            
            if user_stats:
                messages = format_number(user_stats.message_count)
                profile_text.extend([
                    "",
                    "<b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤ —á–∞—Ç–µ:</b>",
                    f"‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏–π: <code>{messages}</code>"
                ])
            else:
                profile_text.append("\n<b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b> –¥–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")
            
            await message.reply(
                "\n".join(profile_text),
                parse_mode='HTML'
            )
            
            logger.info(f"–ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target_user.id}")
            
    except Exception as e:
        error_msg = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ—Ñ–∏–ª–µ"
        logger.error(f"{error_msg}: {str(e)}", exc_info=True)
        await message.reply(f"{error_msg}. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")